apiVersion: apps/v1
kind: Deployment
metadata:
  name: mc-server-manager
  namespace: minecraft-server
  labels:
    app: mc-server-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mc-server-manager
  template:
    metadata:
      name: mc-server-manager
      labels:
        app: mc-server-manager
    spec:
      containers:
        - name: mc-server-manager
          image: ghcr.io/vaynerakawalo/mc-server-manager:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: env
              value: prod
      restartPolicy: Always
      serviceAccountName: mc-server-manager-account

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mc-server-management
rules:
  - apiGroups: ["servers.blamedevs.com"]
    resources: ["mcservers"]
    verbs: ["get", "list", "create", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mc-server-management-binding
subjects:
  - kind: ServiceAccount
    name: mc-server-manager-account
    namespace: minecraft-server
roleRef:
  kind: ClusterRole
  name: mc-server-management
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: minecraft-server
  name: mc-server-management-routes
rules:
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["tcproutes"]
    verbs: ["get", "list", "watch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: minecraft-server
  name: mc-server-management-routes-binding
subjects:
  - kind: ServiceAccount
    name: mc-server-manager-account
    namespace: minecraft-server
roleRef:
  kind: Role
  name: mc-server-management-routes
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mc-server-manager-account
  namespace: minecraft-server

---
apiVersion: v1
kind: Service
metadata:
  name: mc-server-manager
  namespace: minecraft-server
spec:
  selector:
    app: mc-server-manager
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP

---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: mc-server-manager-http
  namespace: minecraft-server
spec:
  parentRefs:
    - name: envoy-gateway
      sectionName: https
      kind: Gateway
      namespace: infra

  hostnames:
    - blamedevs.com

  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /mc-server-manager
      filters:
        - type: URLRewrite
          urlRewrite:
            path:
              replacePrefixMatch: /
              type: ReplacePrefixMatch

      backendRefs:
        - name: mc-server-manager
          namespace: minecraft-server
          port: 80

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: expired-server-cleaner
  namespace: minecraft-server
spec:
  schedule: "*/3 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: expired-server-cleaner
              image: curlimages/curl:8.13.0
              imagePullPolicy: IfNotPresent
              command:
                - /bin/sh
                - -c
                - curl -X DELETE https://blamedevs.com/mc-server-manager/servers
          restartPolicy: OnFailure
          